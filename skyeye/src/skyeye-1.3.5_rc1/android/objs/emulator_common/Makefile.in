# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##############################################################################
##############################################################################
###
###  emulator_common: LIBRARY OF COMMON FUNCTIONS
###
###  THESE ARE POTENTIALLY USED BY ALL COMPONENTS
###

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
######static
#
@WIN32_TRUE@am__append_1 = \
@WIN32_TRUE@       $(top_srcdir)/android/skyeye/os-win32.c \
@WIN32_TRUE@	$(top_srcdir)/android/skyeye/qemu_iothread.c

@WIN32_TRUE@am__append_2 = -no-undefined -shared -module -Xlinker -L$(top_srcdir)/common/.libs/ -Xlinker -lcommon -Xlinker -lwinmm -Xlinker -lmsvcrt -Xlinker -lkernel32 -Xlinker -lole32 -Xlinker -lkernel32 -Xlinker -lgdi32 -Xlinker-luuid -Xlinker -luser32  -Xlinker -lshell32 -Xlinker -lws2_32 -Xlinker --export-all-symbol
@WIN32_FALSE@am__append_3 = -module -L$(top_srcdir)/common -lcommon -lrt -L$(top_builddir)/third-party/libiberty/pic
subdir = android/objs/emulator_common
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltdl.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/bochs_config.h $(top_builddir)/ltdlconf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
libemulator_common_la_LIBADD =
am__libemulator_common_la_SOURCES_DIST =  \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c \
	$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c \
	$(top_srcdir)/android/skyeye/json-lexer.c \
	$(top_srcdir)/android/skyeye/json-parser.c \
	$(top_srcdir)/android/skyeye/json-streamer.c \
	$(top_srcdir)/android/skyeye/qjson.c \
	$(top_srcdir)/android/skyeye/qbool.c \
	$(top_srcdir)/android/skyeye/qdict.c \
	$(top_srcdir)/android/skyeye/qfloat.c \
	$(top_srcdir)/android/skyeye/qint.c \
	$(top_srcdir)/android/skyeye/qlist.c \
	$(top_srcdir)/android/skyeye/qstring.c \
	$(top_srcdir)/android/skyeye/sockets.c \
	$(top_srcdir)/android/skyeye/user-events-qemu.c \
	$(top_srcdir)/android/skyeye/iolooper-select.c \
	$(top_srcdir)/android/skyeye/input.c \
	$(top_srcdir)/android/skyeye/notify.c \
	$(top_srcdir)/android/skyeye/aio-android.c \
	$(top_srcdir)/android/skyeye/async.c \
	$(top_srcdir)/android/skyeye/cbuffer.c \
	$(top_srcdir)/android/skyeye/charpipe.c \
	$(top_srcdir)/android/skyeye/console.c \
	$(top_srcdir)/android/skyeye/cutils.c \
	$(top_srcdir)/android/skyeye/iohandler.c \
	$(top_srcdir)/android/skyeye/osdep.c \
	$(top_srcdir)/android/skyeye/qemu-config.c \
	$(top_srcdir)/android/skyeye/qemu-error.c \
	$(top_srcdir)/android/skyeye/qemu-malloc.c \
	$(top_srcdir)/android/skyeye/qemu-option.c \
	$(top_srcdir)/android/skyeye/qemu-sockets-android.c \
	$(top_srcdir)/android/skyeye/qerror.c \
	$(top_srcdir)/android/skyeye/qemu-char.c \
	$(top_srcdir)/android/hw-kmsg.c $(top_srcdir)/android/config.c \
	$(top_srcdir)/android/core-init-utils.c \
	$(top_srcdir)/android/hw-events.c \
	$(top_srcdir)/android/qemu-setup.c \
	$(top_srcdir)/android/utils/timezone.c \
	$(top_srcdir)/android/async-console.c \
	$(top_srcdir)/android/async-utils.c \
	$(top_srcdir)/android/charmap.c \
	$(top_srcdir)/android/framebuffer.c \
	$(top_srcdir)/android/keycode-array.c \
	$(top_srcdir)/android/avd/hw-config.c \
	$(top_srcdir)/android/avd/info.c \
	$(top_srcdir)/android/avd/util.c \
	$(top_srcdir)/android/sync-utils.c \
	$(top_srcdir)/android/utils/assert.c \
	$(top_srcdir)/android/utils/bufprint.c \
	$(top_srcdir)/android/utils/debug.c \
	$(top_srcdir)/android/utils/dirscanner.c \
	$(top_srcdir)/android/utils/filelock.c \
	$(top_srcdir)/android/utils/ini.c \
	$(top_srcdir)/android/utils/intmap.c \
	$(top_srcdir)/android/utils/lineinput.c \
	$(top_srcdir)/android/utils/mapfile.c \
	$(top_srcdir)/android/utils/misc.c \
	$(top_srcdir)/android/utils/panic.c \
	$(top_srcdir)/android/utils/path.c \
	$(top_srcdir)/android/utils/reflist.c \
	$(top_srcdir)/android/utils/refset.c \
	$(top_srcdir)/android/utils/stralloc.c \
	$(top_srcdir)/android/utils/system.c \
	$(top_srcdir)/android/utils/tempfile.c \
	$(top_srcdir)/android/utils/vector.c \
	$(top_srcdir)/android/skyeye/os-win32.c \
	$(top_srcdir)/android/skyeye/qemu_iothread.c
am__objects_1 = adler32.lo compress.lo crc32.lo deflate.lo gzio.lo \
	infback.lo inffast.lo inflate.lo inftrees.lo trees.lo \
	uncompr.lo zutil.lo
@WIN32_TRUE@am__objects_2 = os-win32.lo qemu_iothread.lo
am__objects_3 = $(am__objects_1) json-lexer.lo json-parser.lo \
	json-streamer.lo qjson.lo qbool.lo qdict.lo qfloat.lo qint.lo \
	qlist.lo qstring.lo sockets.lo user-events-qemu.lo \
	iolooper-select.lo input.lo notify.lo aio-android.lo async.lo \
	cbuffer.lo charpipe.lo console.lo cutils.lo iohandler.lo \
	osdep.lo qemu-config.lo qemu-error.lo qemu-malloc.lo \
	qemu-option.lo qemu-sockets-android.lo qerror.lo qemu-char.lo \
	hw-kmsg.lo config.lo core-init-utils.lo hw-events.lo \
	qemu-setup.lo timezone.lo async-console.lo async-utils.lo \
	charmap.lo framebuffer.lo keycode-array.lo hw-config.lo \
	info.lo util.lo sync-utils.lo assert.lo bufprint.lo debug.lo \
	dirscanner.lo filelock.lo ini.lo intmap.lo lineinput.lo \
	mapfile.lo misc.lo panic.lo path.lo reflist.lo refset.lo \
	stralloc.lo system.lo tempfile.lo vector.lo $(am__objects_2)
am_libemulator_common_la_OBJECTS = $(am__objects_3)
libemulator_common_la_OBJECTS = $(am_libemulator_common_la_OBJECTS)
libemulator_common_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libemulator_common_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libemulator_common_la_SOURCES)
DIST_SOURCES = $(am__libemulator_common_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMMON_CFLAGS = @COMMON_CFLAGS@
COMMON_INCLUDES = @COMMON_INCLUDES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCD_CFLAGS = @LCD_CFLAGS@
LCD_LIBS = @LCD_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM = @LLVM@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

###########################################################
# Zlib sources
#
ZLIB_SOURCES = $(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c $(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c

###########################################################
# Android utility functions
#
emulator_common = $(ZLIB_SOURCES) \
	$(top_srcdir)/android/skyeye/json-lexer.c \
	$(top_srcdir)/android/skyeye/json-parser.c \
	$(top_srcdir)/android/skyeye/json-streamer.c \
	$(top_srcdir)/android/skyeye/qjson.c \
	$(top_srcdir)/android/skyeye/qbool.c \
	$(top_srcdir)/android/skyeye/qdict.c \
	$(top_srcdir)/android/skyeye/qfloat.c \
	$(top_srcdir)/android/skyeye/qint.c \
	$(top_srcdir)/android/skyeye/qlist.c \
	$(top_srcdir)/android/skyeye/qstring.c \
	$(top_srcdir)/android/skyeye/sockets.c \
	$(top_srcdir)/android/skyeye/user-events-qemu.c \
	$(top_srcdir)/android/skyeye/iolooper-select.c \
	$(top_srcdir)/android/skyeye/input.c \
	$(top_srcdir)/android/skyeye/notify.c \
	$(top_srcdir)/android/skyeye/aio-android.c \
	$(top_srcdir)/android/skyeye/async.c \
	$(top_srcdir)/android/skyeye/cbuffer.c \
	$(top_srcdir)/android/skyeye/charpipe.c \
	$(top_srcdir)/android/skyeye/console.c \
	$(top_srcdir)/android/skyeye/cutils.c \
	$(top_srcdir)/android/skyeye/iohandler.c \
	$(top_srcdir)/android/skyeye/osdep.c \
	$(top_srcdir)/android/skyeye/qemu-config.c \
	$(top_srcdir)/android/skyeye/qemu-error.c \
	$(top_srcdir)/android/skyeye/qemu-malloc.c \
	$(top_srcdir)/android/skyeye/qemu-option.c \
	$(top_srcdir)/android/skyeye/qemu-sockets-android.c \
	$(top_srcdir)/android/skyeye/qerror.c \
	$(top_srcdir)/android/skyeye/qemu-char.c \
	$(top_srcdir)/android/hw-kmsg.c $(top_srcdir)/android/config.c \
	$(top_srcdir)/android/core-init-utils.c \
	$(top_srcdir)/android/hw-events.c \
	$(top_srcdir)/android/qemu-setup.c \
	$(top_srcdir)/android/utils/timezone.c \
	$(top_srcdir)/android/async-console.c \
	$(top_srcdir)/android/async-utils.c \
	$(top_srcdir)/android/charmap.c \
	$(top_srcdir)/android/framebuffer.c \
	$(top_srcdir)/android/keycode-array.c \
	$(top_srcdir)/android/avd/hw-config.c \
	$(top_srcdir)/android/avd/info.c \
	$(top_srcdir)/android/avd/util.c \
	$(top_srcdir)/android/sync-utils.c \
	$(top_srcdir)/android/utils/assert.c \
	$(top_srcdir)/android/utils/bufprint.c \
	$(top_srcdir)/android/utils/debug.c \
	$(top_srcdir)/android/utils/dirscanner.c \
	$(top_srcdir)/android/utils/filelock.c \
	$(top_srcdir)/android/utils/ini.c \
	$(top_srcdir)/android/utils/intmap.c \
	$(top_srcdir)/android/utils/lineinput.c \
	$(top_srcdir)/android/utils/mapfile.c \
	$(top_srcdir)/android/utils/misc.c \
	$(top_srcdir)/android/utils/panic.c \
	$(top_srcdir)/android/utils/path.c \
	$(top_srcdir)/android/utils/reflist.c \
	$(top_srcdir)/android/utils/refset.c \
	$(top_srcdir)/android/utils/stralloc.c \
	$(top_srcdir)/android/utils/system.c \
	$(top_srcdir)/android/utils/tempfile.c \
	$(top_srcdir)/android/utils/vector.c $(am__append_1)
# sources inherited from upstream, but not fully
# integrated into android emulator
#
emulator_libqemu = $(CORE_MISC_SOURCES) \
    $(top_srcdir)/android/skyeye/json-lexer.c \
    $(top_srcdir)/android/skyeye/json-parser.c \
    $(top_srcdir)/android/skyeye/json-streamer.c \
    $(top_srcdir)/android/skyeye/qjson.c \
    $(top_srcdir)/android/skyeye/qbool.c \
    $(top_srcdir)/android/skyeye/qdict.c \
    $(top_srcdir)/android/skyeye/qfloat.c \
    $(top_srcdir)/android/skyeye/qint.c \
    $(top_srcdir)/android/skyeye/qlist.c \
    $(top_srcdir)/android/skyeye/qstring.c


#$(top_srcdir)/android/libemulator_common.a: 
#noinst_LIBRARIES = libemulator_common.a 
#libemulator_common_a_SOURCES = $(emulator_common)

######dyn
#
#$(top_srcdir)/android/libemulator_common.so:
libemulator_common_la_SOURCES = $(emulator_common)
libemulator_common_la_LDFLAGS = -module $(am__append_2) \
	$(am__append_3)
pkglib_LTLIBRARIES = libemulator_common.la
@WIN32_FALSE@INCLUDES = -I$(top_srcdir)/android/config/linux-x86/ \
@WIN32_FALSE@	-I$(top_srcdir)/common/include/ \
@WIN32_FALSE@	-I$(top_srcdir)/android/skyeye/ \
@WIN32_FALSE@	-I$(top_srcdir)/android/ \
@WIN32_FALSE@	-I$(top_srcdir)/android/utils/ \
@WIN32_FALSE@	-I$(top_srcdir)/third-party/distrib/zlib-1.2.3/
@WIN32_TRUE@INCLUDES = -I$(top_srcdir)/android/config/windows/ \
@WIN32_TRUE@	-I$(top_srcdir)/common/include/ \
@WIN32_TRUE@	-I$(top_srcdir)/android/skyeye/ \
@WIN32_TRUE@	-I$(top_srcdir)/android/ \
@WIN32_TRUE@	-I$(top_srcdir)/android/utils/ \
@WIN32_TRUE@	-I$(top_srcdir)/third-party/distrib/zlib-1.2.3/
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu android/objs/emulator_common/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu android/objs/emulator_common/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libemulator_common.la: $(libemulator_common_la_OBJECTS) $(libemulator_common_la_DEPENDENCIES) $(EXTRA_libemulator_common_la_DEPENDENCIES) 
	$(libemulator_common_la_LINK) -rpath $(pkglibdir) $(libemulator_common_la_OBJECTS) $(libemulator_common_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adler32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio-android.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/async-console.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/async-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/async.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bufprint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cbuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/charmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/charpipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compress.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/config.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/console.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core-init-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crc32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cutils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deflate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dirscanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filelock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/framebuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gzio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hw-config.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hw-events.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hw-kmsg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/infback.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inffast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inftrees.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ini.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iohandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iolooper-select.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/json-lexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/json-parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/json-streamer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keycode-array.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lineinput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapfile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notify.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/os-win32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osdep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/panic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/path.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qbool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qdict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-char.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-config.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-malloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-option.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-setup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu-sockets-android.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qemu_iothread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qerror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qjson.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qlist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qstring.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reflist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/refset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sockets.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stralloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sync-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/system.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tempfile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timezone.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trees.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uncompr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/user-events-qemu.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zutil.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

adler32.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT adler32.lo -MD -MP -MF $(DEPDIR)/adler32.Tpo -c -o adler32.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/adler32.Tpo $(DEPDIR)/adler32.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c' object='adler32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o adler32.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/adler32.c

compress.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT compress.lo -MD -MP -MF $(DEPDIR)/compress.Tpo -c -o compress.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/compress.Tpo $(DEPDIR)/compress.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c' object='compress.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compress.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/compress.c

crc32.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crc32.lo -MD -MP -MF $(DEPDIR)/crc32.Tpo -c -o crc32.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/crc32.Tpo $(DEPDIR)/crc32.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c' object='crc32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc32.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/crc32.c

deflate.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deflate.lo -MD -MP -MF $(DEPDIR)/deflate.Tpo -c -o deflate.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/deflate.Tpo $(DEPDIR)/deflate.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c' object='deflate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deflate.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/deflate.c

gzio.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzio.lo -MD -MP -MF $(DEPDIR)/gzio.Tpo -c -o gzio.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/gzio.Tpo $(DEPDIR)/gzio.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c' object='gzio.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzio.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/gzio.c

infback.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT infback.lo -MD -MP -MF $(DEPDIR)/infback.Tpo -c -o infback.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/infback.Tpo $(DEPDIR)/infback.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c' object='infback.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o infback.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/infback.c

inffast.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inffast.lo -MD -MP -MF $(DEPDIR)/inffast.Tpo -c -o inffast.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/inffast.Tpo $(DEPDIR)/inffast.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c' object='inffast.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inffast.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inffast.c

inflate.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inflate.lo -MD -MP -MF $(DEPDIR)/inflate.Tpo -c -o inflate.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/inflate.Tpo $(DEPDIR)/inflate.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c' object='inflate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inflate.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inflate.c

inftrees.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inftrees.lo -MD -MP -MF $(DEPDIR)/inftrees.Tpo -c -o inftrees.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/inftrees.Tpo $(DEPDIR)/inftrees.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c' object='inftrees.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inftrees.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/inftrees.c

trees.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT trees.lo -MD -MP -MF $(DEPDIR)/trees.Tpo -c -o trees.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/trees.Tpo $(DEPDIR)/trees.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c' object='trees.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trees.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/trees.c

uncompr.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT uncompr.lo -MD -MP -MF $(DEPDIR)/uncompr.Tpo -c -o uncompr.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/uncompr.Tpo $(DEPDIR)/uncompr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c' object='uncompr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o uncompr.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/uncompr.c

zutil.lo: $(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zutil.lo -MD -MP -MF $(DEPDIR)/zutil.Tpo -c -o zutil.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/zutil.Tpo $(DEPDIR)/zutil.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c' object='zutil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zutil.lo `test -f '$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c' || echo '$(srcdir)/'`$(top_srcdir)/third-party/distrib/zlib-1.2.3/zutil.c

json-lexer.lo: $(top_srcdir)/android/skyeye/json-lexer.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT json-lexer.lo -MD -MP -MF $(DEPDIR)/json-lexer.Tpo -c -o json-lexer.lo `test -f '$(top_srcdir)/android/skyeye/json-lexer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-lexer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/json-lexer.Tpo $(DEPDIR)/json-lexer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/json-lexer.c' object='json-lexer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o json-lexer.lo `test -f '$(top_srcdir)/android/skyeye/json-lexer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-lexer.c

json-parser.lo: $(top_srcdir)/android/skyeye/json-parser.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT json-parser.lo -MD -MP -MF $(DEPDIR)/json-parser.Tpo -c -o json-parser.lo `test -f '$(top_srcdir)/android/skyeye/json-parser.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-parser.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/json-parser.Tpo $(DEPDIR)/json-parser.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/json-parser.c' object='json-parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o json-parser.lo `test -f '$(top_srcdir)/android/skyeye/json-parser.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-parser.c

json-streamer.lo: $(top_srcdir)/android/skyeye/json-streamer.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT json-streamer.lo -MD -MP -MF $(DEPDIR)/json-streamer.Tpo -c -o json-streamer.lo `test -f '$(top_srcdir)/android/skyeye/json-streamer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-streamer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/json-streamer.Tpo $(DEPDIR)/json-streamer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/json-streamer.c' object='json-streamer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o json-streamer.lo `test -f '$(top_srcdir)/android/skyeye/json-streamer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/json-streamer.c

qjson.lo: $(top_srcdir)/android/skyeye/qjson.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qjson.lo -MD -MP -MF $(DEPDIR)/qjson.Tpo -c -o qjson.lo `test -f '$(top_srcdir)/android/skyeye/qjson.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qjson.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qjson.Tpo $(DEPDIR)/qjson.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qjson.c' object='qjson.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qjson.lo `test -f '$(top_srcdir)/android/skyeye/qjson.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qjson.c

qbool.lo: $(top_srcdir)/android/skyeye/qbool.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qbool.lo -MD -MP -MF $(DEPDIR)/qbool.Tpo -c -o qbool.lo `test -f '$(top_srcdir)/android/skyeye/qbool.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qbool.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qbool.Tpo $(DEPDIR)/qbool.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qbool.c' object='qbool.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qbool.lo `test -f '$(top_srcdir)/android/skyeye/qbool.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qbool.c

qdict.lo: $(top_srcdir)/android/skyeye/qdict.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qdict.lo -MD -MP -MF $(DEPDIR)/qdict.Tpo -c -o qdict.lo `test -f '$(top_srcdir)/android/skyeye/qdict.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qdict.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qdict.Tpo $(DEPDIR)/qdict.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qdict.c' object='qdict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qdict.lo `test -f '$(top_srcdir)/android/skyeye/qdict.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qdict.c

qfloat.lo: $(top_srcdir)/android/skyeye/qfloat.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qfloat.lo -MD -MP -MF $(DEPDIR)/qfloat.Tpo -c -o qfloat.lo `test -f '$(top_srcdir)/android/skyeye/qfloat.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qfloat.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qfloat.Tpo $(DEPDIR)/qfloat.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qfloat.c' object='qfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qfloat.lo `test -f '$(top_srcdir)/android/skyeye/qfloat.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qfloat.c

qint.lo: $(top_srcdir)/android/skyeye/qint.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qint.lo -MD -MP -MF $(DEPDIR)/qint.Tpo -c -o qint.lo `test -f '$(top_srcdir)/android/skyeye/qint.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qint.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qint.Tpo $(DEPDIR)/qint.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qint.c' object='qint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qint.lo `test -f '$(top_srcdir)/android/skyeye/qint.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qint.c

qlist.lo: $(top_srcdir)/android/skyeye/qlist.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qlist.lo -MD -MP -MF $(DEPDIR)/qlist.Tpo -c -o qlist.lo `test -f '$(top_srcdir)/android/skyeye/qlist.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qlist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qlist.Tpo $(DEPDIR)/qlist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qlist.c' object='qlist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qlist.lo `test -f '$(top_srcdir)/android/skyeye/qlist.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qlist.c

qstring.lo: $(top_srcdir)/android/skyeye/qstring.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qstring.lo -MD -MP -MF $(DEPDIR)/qstring.Tpo -c -o qstring.lo `test -f '$(top_srcdir)/android/skyeye/qstring.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qstring.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qstring.Tpo $(DEPDIR)/qstring.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qstring.c' object='qstring.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qstring.lo `test -f '$(top_srcdir)/android/skyeye/qstring.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qstring.c

sockets.lo: $(top_srcdir)/android/skyeye/sockets.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sockets.lo -MD -MP -MF $(DEPDIR)/sockets.Tpo -c -o sockets.lo `test -f '$(top_srcdir)/android/skyeye/sockets.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/sockets.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/sockets.Tpo $(DEPDIR)/sockets.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/sockets.c' object='sockets.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sockets.lo `test -f '$(top_srcdir)/android/skyeye/sockets.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/sockets.c

user-events-qemu.lo: $(top_srcdir)/android/skyeye/user-events-qemu.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT user-events-qemu.lo -MD -MP -MF $(DEPDIR)/user-events-qemu.Tpo -c -o user-events-qemu.lo `test -f '$(top_srcdir)/android/skyeye/user-events-qemu.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/user-events-qemu.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/user-events-qemu.Tpo $(DEPDIR)/user-events-qemu.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/user-events-qemu.c' object='user-events-qemu.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o user-events-qemu.lo `test -f '$(top_srcdir)/android/skyeye/user-events-qemu.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/user-events-qemu.c

iolooper-select.lo: $(top_srcdir)/android/skyeye/iolooper-select.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iolooper-select.lo -MD -MP -MF $(DEPDIR)/iolooper-select.Tpo -c -o iolooper-select.lo `test -f '$(top_srcdir)/android/skyeye/iolooper-select.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/iolooper-select.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/iolooper-select.Tpo $(DEPDIR)/iolooper-select.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/iolooper-select.c' object='iolooper-select.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iolooper-select.lo `test -f '$(top_srcdir)/android/skyeye/iolooper-select.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/iolooper-select.c

input.lo: $(top_srcdir)/android/skyeye/input.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT input.lo -MD -MP -MF $(DEPDIR)/input.Tpo -c -o input.lo `test -f '$(top_srcdir)/android/skyeye/input.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/input.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/input.Tpo $(DEPDIR)/input.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/input.c' object='input.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o input.lo `test -f '$(top_srcdir)/android/skyeye/input.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/input.c

notify.lo: $(top_srcdir)/android/skyeye/notify.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT notify.lo -MD -MP -MF $(DEPDIR)/notify.Tpo -c -o notify.lo `test -f '$(top_srcdir)/android/skyeye/notify.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/notify.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/notify.Tpo $(DEPDIR)/notify.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/notify.c' object='notify.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o notify.lo `test -f '$(top_srcdir)/android/skyeye/notify.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/notify.c

aio-android.lo: $(top_srcdir)/android/skyeye/aio-android.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aio-android.lo -MD -MP -MF $(DEPDIR)/aio-android.Tpo -c -o aio-android.lo `test -f '$(top_srcdir)/android/skyeye/aio-android.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/aio-android.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aio-android.Tpo $(DEPDIR)/aio-android.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/aio-android.c' object='aio-android.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aio-android.lo `test -f '$(top_srcdir)/android/skyeye/aio-android.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/aio-android.c

async.lo: $(top_srcdir)/android/skyeye/async.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT async.lo -MD -MP -MF $(DEPDIR)/async.Tpo -c -o async.lo `test -f '$(top_srcdir)/android/skyeye/async.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/async.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/async.Tpo $(DEPDIR)/async.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/async.c' object='async.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o async.lo `test -f '$(top_srcdir)/android/skyeye/async.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/async.c

cbuffer.lo: $(top_srcdir)/android/skyeye/cbuffer.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cbuffer.lo -MD -MP -MF $(DEPDIR)/cbuffer.Tpo -c -o cbuffer.lo `test -f '$(top_srcdir)/android/skyeye/cbuffer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/cbuffer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/cbuffer.Tpo $(DEPDIR)/cbuffer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/cbuffer.c' object='cbuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cbuffer.lo `test -f '$(top_srcdir)/android/skyeye/cbuffer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/cbuffer.c

charpipe.lo: $(top_srcdir)/android/skyeye/charpipe.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT charpipe.lo -MD -MP -MF $(DEPDIR)/charpipe.Tpo -c -o charpipe.lo `test -f '$(top_srcdir)/android/skyeye/charpipe.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/charpipe.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/charpipe.Tpo $(DEPDIR)/charpipe.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/charpipe.c' object='charpipe.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o charpipe.lo `test -f '$(top_srcdir)/android/skyeye/charpipe.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/charpipe.c

console.lo: $(top_srcdir)/android/skyeye/console.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT console.lo -MD -MP -MF $(DEPDIR)/console.Tpo -c -o console.lo `test -f '$(top_srcdir)/android/skyeye/console.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/console.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/console.Tpo $(DEPDIR)/console.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/console.c' object='console.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o console.lo `test -f '$(top_srcdir)/android/skyeye/console.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/console.c

cutils.lo: $(top_srcdir)/android/skyeye/cutils.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cutils.lo -MD -MP -MF $(DEPDIR)/cutils.Tpo -c -o cutils.lo `test -f '$(top_srcdir)/android/skyeye/cutils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/cutils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/cutils.Tpo $(DEPDIR)/cutils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/cutils.c' object='cutils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cutils.lo `test -f '$(top_srcdir)/android/skyeye/cutils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/cutils.c

iohandler.lo: $(top_srcdir)/android/skyeye/iohandler.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iohandler.lo -MD -MP -MF $(DEPDIR)/iohandler.Tpo -c -o iohandler.lo `test -f '$(top_srcdir)/android/skyeye/iohandler.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/iohandler.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/iohandler.Tpo $(DEPDIR)/iohandler.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/iohandler.c' object='iohandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iohandler.lo `test -f '$(top_srcdir)/android/skyeye/iohandler.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/iohandler.c

osdep.lo: $(top_srcdir)/android/skyeye/osdep.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT osdep.lo -MD -MP -MF $(DEPDIR)/osdep.Tpo -c -o osdep.lo `test -f '$(top_srcdir)/android/skyeye/osdep.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/osdep.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/osdep.Tpo $(DEPDIR)/osdep.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/osdep.c' object='osdep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o osdep.lo `test -f '$(top_srcdir)/android/skyeye/osdep.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/osdep.c

qemu-config.lo: $(top_srcdir)/android/skyeye/qemu-config.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-config.lo -MD -MP -MF $(DEPDIR)/qemu-config.Tpo -c -o qemu-config.lo `test -f '$(top_srcdir)/android/skyeye/qemu-config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-config.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-config.Tpo $(DEPDIR)/qemu-config.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-config.c' object='qemu-config.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-config.lo `test -f '$(top_srcdir)/android/skyeye/qemu-config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-config.c

qemu-error.lo: $(top_srcdir)/android/skyeye/qemu-error.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-error.lo -MD -MP -MF $(DEPDIR)/qemu-error.Tpo -c -o qemu-error.lo `test -f '$(top_srcdir)/android/skyeye/qemu-error.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-error.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-error.Tpo $(DEPDIR)/qemu-error.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-error.c' object='qemu-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-error.lo `test -f '$(top_srcdir)/android/skyeye/qemu-error.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-error.c

qemu-malloc.lo: $(top_srcdir)/android/skyeye/qemu-malloc.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-malloc.lo -MD -MP -MF $(DEPDIR)/qemu-malloc.Tpo -c -o qemu-malloc.lo `test -f '$(top_srcdir)/android/skyeye/qemu-malloc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-malloc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-malloc.Tpo $(DEPDIR)/qemu-malloc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-malloc.c' object='qemu-malloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-malloc.lo `test -f '$(top_srcdir)/android/skyeye/qemu-malloc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-malloc.c

qemu-option.lo: $(top_srcdir)/android/skyeye/qemu-option.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-option.lo -MD -MP -MF $(DEPDIR)/qemu-option.Tpo -c -o qemu-option.lo `test -f '$(top_srcdir)/android/skyeye/qemu-option.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-option.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-option.Tpo $(DEPDIR)/qemu-option.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-option.c' object='qemu-option.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-option.lo `test -f '$(top_srcdir)/android/skyeye/qemu-option.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-option.c

qemu-sockets-android.lo: $(top_srcdir)/android/skyeye/qemu-sockets-android.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-sockets-android.lo -MD -MP -MF $(DEPDIR)/qemu-sockets-android.Tpo -c -o qemu-sockets-android.lo `test -f '$(top_srcdir)/android/skyeye/qemu-sockets-android.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-sockets-android.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-sockets-android.Tpo $(DEPDIR)/qemu-sockets-android.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-sockets-android.c' object='qemu-sockets-android.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-sockets-android.lo `test -f '$(top_srcdir)/android/skyeye/qemu-sockets-android.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-sockets-android.c

qerror.lo: $(top_srcdir)/android/skyeye/qerror.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qerror.lo -MD -MP -MF $(DEPDIR)/qerror.Tpo -c -o qerror.lo `test -f '$(top_srcdir)/android/skyeye/qerror.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qerror.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qerror.Tpo $(DEPDIR)/qerror.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qerror.c' object='qerror.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qerror.lo `test -f '$(top_srcdir)/android/skyeye/qerror.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qerror.c

qemu-char.lo: $(top_srcdir)/android/skyeye/qemu-char.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-char.lo -MD -MP -MF $(DEPDIR)/qemu-char.Tpo -c -o qemu-char.lo `test -f '$(top_srcdir)/android/skyeye/qemu-char.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-char.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-char.Tpo $(DEPDIR)/qemu-char.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu-char.c' object='qemu-char.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-char.lo `test -f '$(top_srcdir)/android/skyeye/qemu-char.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu-char.c

hw-kmsg.lo: $(top_srcdir)/android/hw-kmsg.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hw-kmsg.lo -MD -MP -MF $(DEPDIR)/hw-kmsg.Tpo -c -o hw-kmsg.lo `test -f '$(top_srcdir)/android/hw-kmsg.c' || echo '$(srcdir)/'`$(top_srcdir)/android/hw-kmsg.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/hw-kmsg.Tpo $(DEPDIR)/hw-kmsg.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/hw-kmsg.c' object='hw-kmsg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hw-kmsg.lo `test -f '$(top_srcdir)/android/hw-kmsg.c' || echo '$(srcdir)/'`$(top_srcdir)/android/hw-kmsg.c

config.lo: $(top_srcdir)/android/config.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT config.lo -MD -MP -MF $(DEPDIR)/config.Tpo -c -o config.lo `test -f '$(top_srcdir)/android/config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/config.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/config.Tpo $(DEPDIR)/config.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/config.c' object='config.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o config.lo `test -f '$(top_srcdir)/android/config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/config.c

core-init-utils.lo: $(top_srcdir)/android/core-init-utils.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT core-init-utils.lo -MD -MP -MF $(DEPDIR)/core-init-utils.Tpo -c -o core-init-utils.lo `test -f '$(top_srcdir)/android/core-init-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/core-init-utils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/core-init-utils.Tpo $(DEPDIR)/core-init-utils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/core-init-utils.c' object='core-init-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o core-init-utils.lo `test -f '$(top_srcdir)/android/core-init-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/core-init-utils.c

hw-events.lo: $(top_srcdir)/android/hw-events.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hw-events.lo -MD -MP -MF $(DEPDIR)/hw-events.Tpo -c -o hw-events.lo `test -f '$(top_srcdir)/android/hw-events.c' || echo '$(srcdir)/'`$(top_srcdir)/android/hw-events.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/hw-events.Tpo $(DEPDIR)/hw-events.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/hw-events.c' object='hw-events.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hw-events.lo `test -f '$(top_srcdir)/android/hw-events.c' || echo '$(srcdir)/'`$(top_srcdir)/android/hw-events.c

qemu-setup.lo: $(top_srcdir)/android/qemu-setup.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu-setup.lo -MD -MP -MF $(DEPDIR)/qemu-setup.Tpo -c -o qemu-setup.lo `test -f '$(top_srcdir)/android/qemu-setup.c' || echo '$(srcdir)/'`$(top_srcdir)/android/qemu-setup.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu-setup.Tpo $(DEPDIR)/qemu-setup.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/qemu-setup.c' object='qemu-setup.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu-setup.lo `test -f '$(top_srcdir)/android/qemu-setup.c' || echo '$(srcdir)/'`$(top_srcdir)/android/qemu-setup.c

timezone.lo: $(top_srcdir)/android/utils/timezone.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT timezone.lo -MD -MP -MF $(DEPDIR)/timezone.Tpo -c -o timezone.lo `test -f '$(top_srcdir)/android/utils/timezone.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/timezone.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/timezone.Tpo $(DEPDIR)/timezone.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/timezone.c' object='timezone.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o timezone.lo `test -f '$(top_srcdir)/android/utils/timezone.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/timezone.c

async-console.lo: $(top_srcdir)/android/async-console.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT async-console.lo -MD -MP -MF $(DEPDIR)/async-console.Tpo -c -o async-console.lo `test -f '$(top_srcdir)/android/async-console.c' || echo '$(srcdir)/'`$(top_srcdir)/android/async-console.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/async-console.Tpo $(DEPDIR)/async-console.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/async-console.c' object='async-console.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o async-console.lo `test -f '$(top_srcdir)/android/async-console.c' || echo '$(srcdir)/'`$(top_srcdir)/android/async-console.c

async-utils.lo: $(top_srcdir)/android/async-utils.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT async-utils.lo -MD -MP -MF $(DEPDIR)/async-utils.Tpo -c -o async-utils.lo `test -f '$(top_srcdir)/android/async-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/async-utils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/async-utils.Tpo $(DEPDIR)/async-utils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/async-utils.c' object='async-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o async-utils.lo `test -f '$(top_srcdir)/android/async-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/async-utils.c

charmap.lo: $(top_srcdir)/android/charmap.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT charmap.lo -MD -MP -MF $(DEPDIR)/charmap.Tpo -c -o charmap.lo `test -f '$(top_srcdir)/android/charmap.c' || echo '$(srcdir)/'`$(top_srcdir)/android/charmap.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/charmap.Tpo $(DEPDIR)/charmap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/charmap.c' object='charmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o charmap.lo `test -f '$(top_srcdir)/android/charmap.c' || echo '$(srcdir)/'`$(top_srcdir)/android/charmap.c

framebuffer.lo: $(top_srcdir)/android/framebuffer.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT framebuffer.lo -MD -MP -MF $(DEPDIR)/framebuffer.Tpo -c -o framebuffer.lo `test -f '$(top_srcdir)/android/framebuffer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/framebuffer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/framebuffer.Tpo $(DEPDIR)/framebuffer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/framebuffer.c' object='framebuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o framebuffer.lo `test -f '$(top_srcdir)/android/framebuffer.c' || echo '$(srcdir)/'`$(top_srcdir)/android/framebuffer.c

keycode-array.lo: $(top_srcdir)/android/keycode-array.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT keycode-array.lo -MD -MP -MF $(DEPDIR)/keycode-array.Tpo -c -o keycode-array.lo `test -f '$(top_srcdir)/android/keycode-array.c' || echo '$(srcdir)/'`$(top_srcdir)/android/keycode-array.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/keycode-array.Tpo $(DEPDIR)/keycode-array.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/keycode-array.c' object='keycode-array.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o keycode-array.lo `test -f '$(top_srcdir)/android/keycode-array.c' || echo '$(srcdir)/'`$(top_srcdir)/android/keycode-array.c

hw-config.lo: $(top_srcdir)/android/avd/hw-config.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hw-config.lo -MD -MP -MF $(DEPDIR)/hw-config.Tpo -c -o hw-config.lo `test -f '$(top_srcdir)/android/avd/hw-config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/hw-config.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/hw-config.Tpo $(DEPDIR)/hw-config.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/avd/hw-config.c' object='hw-config.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hw-config.lo `test -f '$(top_srcdir)/android/avd/hw-config.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/hw-config.c

info.lo: $(top_srcdir)/android/avd/info.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT info.lo -MD -MP -MF $(DEPDIR)/info.Tpo -c -o info.lo `test -f '$(top_srcdir)/android/avd/info.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/info.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/info.Tpo $(DEPDIR)/info.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/avd/info.c' object='info.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o info.lo `test -f '$(top_srcdir)/android/avd/info.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/info.c

util.lo: $(top_srcdir)/android/avd/util.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.lo -MD -MP -MF $(DEPDIR)/util.Tpo -c -o util.lo `test -f '$(top_srcdir)/android/avd/util.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/util.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/util.Tpo $(DEPDIR)/util.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/avd/util.c' object='util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.lo `test -f '$(top_srcdir)/android/avd/util.c' || echo '$(srcdir)/'`$(top_srcdir)/android/avd/util.c

sync-utils.lo: $(top_srcdir)/android/sync-utils.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync-utils.lo -MD -MP -MF $(DEPDIR)/sync-utils.Tpo -c -o sync-utils.lo `test -f '$(top_srcdir)/android/sync-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/sync-utils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/sync-utils.Tpo $(DEPDIR)/sync-utils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/sync-utils.c' object='sync-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync-utils.lo `test -f '$(top_srcdir)/android/sync-utils.c' || echo '$(srcdir)/'`$(top_srcdir)/android/sync-utils.c

assert.lo: $(top_srcdir)/android/utils/assert.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT assert.lo -MD -MP -MF $(DEPDIR)/assert.Tpo -c -o assert.lo `test -f '$(top_srcdir)/android/utils/assert.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/assert.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/assert.Tpo $(DEPDIR)/assert.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/assert.c' object='assert.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o assert.lo `test -f '$(top_srcdir)/android/utils/assert.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/assert.c

bufprint.lo: $(top_srcdir)/android/utils/bufprint.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bufprint.lo -MD -MP -MF $(DEPDIR)/bufprint.Tpo -c -o bufprint.lo `test -f '$(top_srcdir)/android/utils/bufprint.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/bufprint.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/bufprint.Tpo $(DEPDIR)/bufprint.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/bufprint.c' object='bufprint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bufprint.lo `test -f '$(top_srcdir)/android/utils/bufprint.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/bufprint.c

debug.lo: $(top_srcdir)/android/utils/debug.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT debug.lo -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.lo `test -f '$(top_srcdir)/android/utils/debug.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/debug.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/debug.c' object='debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o debug.lo `test -f '$(top_srcdir)/android/utils/debug.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/debug.c

dirscanner.lo: $(top_srcdir)/android/utils/dirscanner.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dirscanner.lo -MD -MP -MF $(DEPDIR)/dirscanner.Tpo -c -o dirscanner.lo `test -f '$(top_srcdir)/android/utils/dirscanner.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/dirscanner.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dirscanner.Tpo $(DEPDIR)/dirscanner.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/dirscanner.c' object='dirscanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dirscanner.lo `test -f '$(top_srcdir)/android/utils/dirscanner.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/dirscanner.c

filelock.lo: $(top_srcdir)/android/utils/filelock.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filelock.lo -MD -MP -MF $(DEPDIR)/filelock.Tpo -c -o filelock.lo `test -f '$(top_srcdir)/android/utils/filelock.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/filelock.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filelock.Tpo $(DEPDIR)/filelock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/filelock.c' object='filelock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filelock.lo `test -f '$(top_srcdir)/android/utils/filelock.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/filelock.c

ini.lo: $(top_srcdir)/android/utils/ini.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ini.lo -MD -MP -MF $(DEPDIR)/ini.Tpo -c -o ini.lo `test -f '$(top_srcdir)/android/utils/ini.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/ini.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/ini.Tpo $(DEPDIR)/ini.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/ini.c' object='ini.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ini.lo `test -f '$(top_srcdir)/android/utils/ini.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/ini.c

intmap.lo: $(top_srcdir)/android/utils/intmap.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intmap.lo -MD -MP -MF $(DEPDIR)/intmap.Tpo -c -o intmap.lo `test -f '$(top_srcdir)/android/utils/intmap.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/intmap.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/intmap.Tpo $(DEPDIR)/intmap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/intmap.c' object='intmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intmap.lo `test -f '$(top_srcdir)/android/utils/intmap.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/intmap.c

lineinput.lo: $(top_srcdir)/android/utils/lineinput.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lineinput.lo -MD -MP -MF $(DEPDIR)/lineinput.Tpo -c -o lineinput.lo `test -f '$(top_srcdir)/android/utils/lineinput.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/lineinput.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lineinput.Tpo $(DEPDIR)/lineinput.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/lineinput.c' object='lineinput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lineinput.lo `test -f '$(top_srcdir)/android/utils/lineinput.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/lineinput.c

mapfile.lo: $(top_srcdir)/android/utils/mapfile.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapfile.lo -MD -MP -MF $(DEPDIR)/mapfile.Tpo -c -o mapfile.lo `test -f '$(top_srcdir)/android/utils/mapfile.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/mapfile.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapfile.Tpo $(DEPDIR)/mapfile.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/mapfile.c' object='mapfile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapfile.lo `test -f '$(top_srcdir)/android/utils/mapfile.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/mapfile.c

misc.lo: $(top_srcdir)/android/utils/misc.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT misc.lo -MD -MP -MF $(DEPDIR)/misc.Tpo -c -o misc.lo `test -f '$(top_srcdir)/android/utils/misc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/misc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/misc.Tpo $(DEPDIR)/misc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/misc.c' object='misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o misc.lo `test -f '$(top_srcdir)/android/utils/misc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/misc.c

panic.lo: $(top_srcdir)/android/utils/panic.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT panic.lo -MD -MP -MF $(DEPDIR)/panic.Tpo -c -o panic.lo `test -f '$(top_srcdir)/android/utils/panic.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/panic.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/panic.Tpo $(DEPDIR)/panic.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/panic.c' object='panic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o panic.lo `test -f '$(top_srcdir)/android/utils/panic.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/panic.c

path.lo: $(top_srcdir)/android/utils/path.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT path.lo -MD -MP -MF $(DEPDIR)/path.Tpo -c -o path.lo `test -f '$(top_srcdir)/android/utils/path.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/path.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/path.Tpo $(DEPDIR)/path.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/path.c' object='path.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o path.lo `test -f '$(top_srcdir)/android/utils/path.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/path.c

reflist.lo: $(top_srcdir)/android/utils/reflist.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reflist.lo -MD -MP -MF $(DEPDIR)/reflist.Tpo -c -o reflist.lo `test -f '$(top_srcdir)/android/utils/reflist.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/reflist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/reflist.Tpo $(DEPDIR)/reflist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/reflist.c' object='reflist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reflist.lo `test -f '$(top_srcdir)/android/utils/reflist.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/reflist.c

refset.lo: $(top_srcdir)/android/utils/refset.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT refset.lo -MD -MP -MF $(DEPDIR)/refset.Tpo -c -o refset.lo `test -f '$(top_srcdir)/android/utils/refset.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/refset.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/refset.Tpo $(DEPDIR)/refset.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/refset.c' object='refset.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o refset.lo `test -f '$(top_srcdir)/android/utils/refset.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/refset.c

stralloc.lo: $(top_srcdir)/android/utils/stralloc.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stralloc.lo -MD -MP -MF $(DEPDIR)/stralloc.Tpo -c -o stralloc.lo `test -f '$(top_srcdir)/android/utils/stralloc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/stralloc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/stralloc.Tpo $(DEPDIR)/stralloc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/stralloc.c' object='stralloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stralloc.lo `test -f '$(top_srcdir)/android/utils/stralloc.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/stralloc.c

system.lo: $(top_srcdir)/android/utils/system.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT system.lo -MD -MP -MF $(DEPDIR)/system.Tpo -c -o system.lo `test -f '$(top_srcdir)/android/utils/system.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/system.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/system.Tpo $(DEPDIR)/system.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/system.c' object='system.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o system.lo `test -f '$(top_srcdir)/android/utils/system.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/system.c

tempfile.lo: $(top_srcdir)/android/utils/tempfile.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tempfile.lo -MD -MP -MF $(DEPDIR)/tempfile.Tpo -c -o tempfile.lo `test -f '$(top_srcdir)/android/utils/tempfile.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/tempfile.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tempfile.Tpo $(DEPDIR)/tempfile.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/tempfile.c' object='tempfile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tempfile.lo `test -f '$(top_srcdir)/android/utils/tempfile.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/tempfile.c

vector.lo: $(top_srcdir)/android/utils/vector.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector.lo -MD -MP -MF $(DEPDIR)/vector.Tpo -c -o vector.lo `test -f '$(top_srcdir)/android/utils/vector.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/vector.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vector.Tpo $(DEPDIR)/vector.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/utils/vector.c' object='vector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector.lo `test -f '$(top_srcdir)/android/utils/vector.c' || echo '$(srcdir)/'`$(top_srcdir)/android/utils/vector.c

os-win32.lo: $(top_srcdir)/android/skyeye/os-win32.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT os-win32.lo -MD -MP -MF $(DEPDIR)/os-win32.Tpo -c -o os-win32.lo `test -f '$(top_srcdir)/android/skyeye/os-win32.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/os-win32.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/os-win32.Tpo $(DEPDIR)/os-win32.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/os-win32.c' object='os-win32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o os-win32.lo `test -f '$(top_srcdir)/android/skyeye/os-win32.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/os-win32.c

qemu_iothread.lo: $(top_srcdir)/android/skyeye/qemu_iothread.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qemu_iothread.lo -MD -MP -MF $(DEPDIR)/qemu_iothread.Tpo -c -o qemu_iothread.lo `test -f '$(top_srcdir)/android/skyeye/qemu_iothread.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu_iothread.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/qemu_iothread.Tpo $(DEPDIR)/qemu_iothread.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/android/skyeye/qemu_iothread.c' object='qemu_iothread.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qemu_iothread.lo `test -f '$(top_srcdir)/android/skyeye/qemu_iothread.c' || echo '$(srcdir)/'`$(top_srcdir)/android/skyeye/qemu_iothread.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-pkglibLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
